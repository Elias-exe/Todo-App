{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adven\\\\Desktop\\\\Todo-App\\\\src\\\\components\\\\context\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoContext = /*#__PURE__*/createContext({\n  todoList: [localStorage.getItem('list')],\n  addToList: () => {}\n});\nexport const todoProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [todoList, setTodoList] = useState([]);\n\n  const addToList = todoName => {\n    if (!todoName.length) return;\n    const todo = {\n      todoName,\n      id: Math.random(),\n      completed: false\n    };\n    const oldTodoList = todoList.slice();\n    oldTodoList.push(todo);\n    setTodoList(oldTodoList);\n  };\n\n  const value = useMemo(() => ({\n    todoList,\n    addToList\n  }));\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(todoProvider, \"CUUtUe9g/Hsxl2DCvrMSDpb0xKM=\");","map":{"version":3,"names":["createContext","useState","useMemo","TodoContext","todoList","localStorage","getItem","addToList","todoProvider","children","setTodoList","todoName","length","todo","id","Math","random","completed","oldTodoList","slice","push","value"],"sources":["C:/Users/adven/Desktop/Todo-App/src/components/context/index.js"],"sourcesContent":["import {\r\n  createContext, useState, useMemo,\r\n} from 'react';\r\n\r\nexport const TodoContext = createContext({\r\n  todoList: [localStorage.getItem('list')],\r\n  addToList: () => {},\r\n});\r\n\r\nexport const todoProvider = ({ children }) => {\r\n  const [todoList, setTodoList] = useState([]);\r\n  const addToList = (todoName) => {\r\n    if (!todoName.length) return;\r\n\r\n    const todo = {\r\n      todoName,\r\n      id: Math.random(),\r\n      completed: false,\r\n    };\r\n\r\n    const oldTodoList = todoList.slice();\r\n    oldTodoList.push(todo);\r\n    setTodoList(oldTodoList);\r\n  };\r\n\r\n  const value = useMemo(() => ({\r\n    todoList,\r\n    addToList,\r\n  }));\r\n\r\n  return (\r\n    <TodoContext.Provider value={value}>\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SACEA,aADF,EACiBC,QADjB,EAC2BC,OAD3B,QAEO,OAFP;;AAIA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC;EACvCI,QAAQ,EAAE,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAD6B;EAEvCC,SAAS,EAAE,MAAM,CAAE;AAFoB,CAAD,CAAjC;AAKP,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAM,CAACL,QAAD,EAAWM,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;EACA,MAAMM,SAAS,GAAII,QAAD,IAAc;IAC9B,IAAI,CAACA,QAAQ,CAACC,MAAd,EAAsB;IAEtB,MAAMC,IAAI,GAAG;MACXF,QADW;MAEXG,EAAE,EAAEC,IAAI,CAACC,MAAL,EAFO;MAGXC,SAAS,EAAE;IAHA,CAAb;IAMA,MAAMC,WAAW,GAAGd,QAAQ,CAACe,KAAT,EAApB;IACAD,WAAW,CAACE,IAAZ,CAAiBP,IAAjB;IACAH,WAAW,CAACQ,WAAD,CAAX;EACD,CAZD;;EAcA,MAAMG,KAAK,GAAGnB,OAAO,CAAC,OAAO;IAC3BE,QAD2B;IAE3BG;EAF2B,CAAP,CAAD,CAArB;EAKA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEc,KAA7B;IAAA,UACGZ;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA1BM;;GAAMD,Y"},"metadata":{},"sourceType":"module"}