{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aragab01\\\\Repositories\\\\Todo-App\\\\src\\\\components\\\\context\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoContext = /*#__PURE__*/createContext({\n  todoList: [localStorage.getItem('list')],\n  addToList: () => {}\n});\nexport function TodoProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [todoList, setTodoList] = useState([{\n    todoName: 'Oioioi',\n    id: Math.random(),\n    completed: false\n  }]);\n\n  const addToList = todoName => {\n    if (!todoName.length) return;\n    const todo = {\n      todoName,\n      id: Math.random(),\n      completed: false\n    };\n    setTodoList(todo);\n  };\n\n  const value = useMemo(() => ({\n    todoList,\n    addToList\n  }));\n  console.log(todoList);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoProvider, \"y4FHPkFF+YIzFaWuZUMeU+PlgRg=\");\n\n_c = TodoProvider;\nTodoProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["createContext","useState","useMemo","PropTypes","TodoContext","todoList","localStorage","getItem","addToList","TodoProvider","children","setTodoList","todoName","id","Math","random","completed","length","todo","value","console","log","propTypes","node","isRequired"],"sources":["C:/Users/aragab01/Repositories/Todo-App/src/components/context/index.js"],"sourcesContent":["import {\r\n  createContext, useState, useMemo,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoContext = createContext({\r\n  todoList: [localStorage.getItem('list')],\r\n  addToList: () => {},\r\n});\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [todoList, setTodoList] = useState([{\r\n    todoName: 'Oioioi',\r\n    id: Math.random(),\r\n    completed: false,\r\n  }]);\r\n  const addToList = (todoName) => {\r\n    if (!todoName.length) return;\r\n\r\n    const todo = {\r\n      todoName,\r\n      id: Math.random(),\r\n      completed: false,\r\n    };\r\n\r\n    setTodoList(todo);\r\n  };\r\n\r\n  const value = useMemo(() => ({\r\n    todoList,\r\n    addToList,\r\n  }));\r\n\r\n  console.log(todoList);\r\n\r\n  return (\r\n    <TodoContext.Provider value={value}>\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nTodoProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n"],"mappings":";;;AAAA,SACEA,aADF,EACiBC,QADjB,EAC2BC,OAD3B,QAEO,OAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;EACvCK,QAAQ,EAAE,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAD6B;EAEvCC,SAAS,EAAE,MAAM,CAAE;AAFoB,CAAD,CAAjC;AAKP,OAAO,SAASC,YAAT,OAAoC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzC,MAAM,CAACL,QAAD,EAAWM,WAAX,IAA0BV,QAAQ,CAAC,CAAC;IACxCW,QAAQ,EAAE,QAD8B;IAExCC,EAAE,EAAEC,IAAI,CAACC,MAAL,EAFoC;IAGxCC,SAAS,EAAE;EAH6B,CAAD,CAAD,CAAxC;;EAKA,MAAMR,SAAS,GAAII,QAAD,IAAc;IAC9B,IAAI,CAACA,QAAQ,CAACK,MAAd,EAAsB;IAEtB,MAAMC,IAAI,GAAG;MACXN,QADW;MAEXC,EAAE,EAAEC,IAAI,CAACC,MAAL,EAFO;MAGXC,SAAS,EAAE;IAHA,CAAb;IAMAL,WAAW,CAACO,IAAD,CAAX;EACD,CAVD;;EAYA,MAAMC,KAAK,GAAGjB,OAAO,CAAC,OAAO;IAC3BG,QAD2B;IAE3BG;EAF2B,CAAP,CAAD,CAArB;EAKAY,OAAO,CAACC,GAAR,CAAYhB,QAAZ;EAEA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEc,KAA7B;IAAA,UACGT;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA9BeD,Y;;KAAAA,Y;AAgChBA,YAAY,CAACa,SAAb,GAAyB;EACvBZ,QAAQ,EAAEP,SAAS,CAACoB,IAAV,CAAeC;AADF,CAAzB"},"metadata":{},"sourceType":"module"}